#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define NAV 1
#define SYM 2
#define ADJ 3
#define EXTRA 4

/ {
    behaviors {
        paraless: paraless {
            compatible = "zmk,behavior-mod-morph";
            label = "PARALESS";
            bindings = <&kp LEFT_PARENTHESIS>, <&kp LESS_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        paragreat: paragreat {
            compatible = "zmk,behavior-mod-morph";
            label = "PARAGREAT";
            bindings = <&kp RIGHT_PARENTHESIS>, <&kp GREATER_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
    };

    macros {
        browsertab: browsertab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp LCTRL>;
        };
    };

    combos {
        compatible = "zmk,combos";

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <1 29>;
        };

        perc {
            bindings = <&kp PERCENT>;
            key-positions = <5 17>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <28 16>;
        };

        dollar {
            bindings = <&kp DOLLAR>;
            key-positions = <4 16>;
        };

        pound {
            bindings = <&kp POUND>;
            key-positions = <3 15>;
        };

        at {
            bindings = <&kp AT>;
            key-positions = <2 14>;
        };

        backslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <26 14>;
        };

        copy {
            bindings = <&kp K_COPY>;
            key-positions = <28 27>;
        };

        paste {
            bindings = <&kp K_PASTE>;
            key-positions = <26 27>;
        };

        star {
            bindings = <&kp STAR>;
            key-positions = <8 20>;
        };

        slash {
            bindings = <&kp SLASH>;
            key-positions = <32 20>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <7 19>;
        };

        minus {
            bindings = <&kp KP_MINUS>;
            key-positions = <18 19 18 19>;
        };

        underscore {
            bindings = <&kp UNDER>;
            key-positions = <30 18>;
        };

        leftbrack {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <31 32>;
        };

        rightbrack {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <33 32>;
        };

        para-less {
            bindings = <&paraless>;
            key-positions = <20 19>;
        };

        para-great {
            bindings = <&paragreat>;
            key-positions = <20 21>;
        };

        Ctrl {
            bindings = <&sk LCTRL>;
            key-positions = <1 3>;
            layers = <0>;
        };

        Del {
            bindings = <&kp LA(LC(DELETE))>;
            key-positions = <3 2 16>;
        };

        RCtrl {
            bindings = <&sk RCTRL>;
            key-positions = <22 19>;
            layers = <0>;
        };

        RCommand {
            bindings = <&sk RIGHT_GUI>;
            key-positions = <19 8>;
        };

        L3_adj {
            bindings = <&tog 3>;
            key-positions = <32 30 19>;
        };
    };

    //

    keymap {
        compatible = "zmk,keymap";

        DEF {
            display-name = "Base";

            // -----------------------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
            // |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
            // |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
            // | GUI | CTRL | SHFT | LWR | SPC |   | ENT | RSE  | BKSP | ALT | ESC |

            bindings = <
&none  &kp Q             &kp W  &kp E         &kp R      &kp T        &kp Y      &kp U          &kp I      &kp O    &kp P                  &none
&none  &kp A             &kp S  &kp D         &kp F      &kp G        &kp H      &kp J          &kp K      &kp L    &kp SEMI               &none
&none  &mt LEFT_SHIFT Z  &kp X  &kp C         &kp V      &kp B        &kp N      &kp M          &kp COMMA  &kp DOT  &mt RIGHT_SHIFT SLASH  &none
                                &kp QUESTION  &kp ENTER  &kp SPACE    &kp SPACE  &kp BACKSPACE  &to 1
            >;
        };

        NAV {
            display-name = "NavNum";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            // | GUI | CTRL | SHFT | LWR | SPC |   | ENT | RSE  | BKSP | ALT | ESC |

            bindings = <
&none  &kp N1                 &kp N2    &kp N3        &kp N4           &kp N5           &kp N6         &kp N7         &kp N8  &kp N9  &kp N0                       &none
&none  &mt LGUI LEFT_COMMAND  &kp TAB   &kp UP_ARROW  &browsertab      &kp PAGE_UP      &kp N0         &kp N4         &kp N5  &kp N6  &kp KP_PLUS                  &none
&none  &kp LEFT_SHIFT         &kp LEFT  &kp DOWN      &kp RIGHT_ARROW  &kp PAGE_DOWN    &kp LS(EQUAL)  &kp N1         &kp N2  &kp N3  &mt RIGHT_SHIFT KP_SUBTRACT  &none
                                        &to 0         &kp ENTER        &kp SPACE        &kp SPACE      &kp BACKSPACE  &to 2
            >;
        };

        SYM {
            display-name = "Symbols";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none   &kp EXCL                   &kp AT          &kp HASH        &kp DLLR         &kp PRCNT    &kp CARET  &kp AMPS       &kp ASTRK  &kp LEFT_PARENTHESIS  &kp RPAR  &none
&none   &mt LEFT_COMMAND LEFT_GUI  &kp TAB         &kp UP_ARROW    &kp DELETE       &kp GRAVE    &kp MINUS  &kp EQUAL      &kp LBKT   &kp RBKT              &kp BSLH  &none
&trans  &kp LEFT_SHIFT             &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp TILDE    &kp UNDER  &kp PLUS       &kp LBRC   &kp RBRC              &kp PIPE  &none
                                                   &to 0           &kp ENTER        &kp SPACE    &kp SPACE  &kp BACKSPACE  &to 1
            >;
        };

        ADJ {
            display-name = "System";
            bindings = <
&none  &kp F1                     &kp F2        &kp F3        &kp F4            &kp F5            &kp F6     &kp F7         &kp F8   &kp F9   &kp F10      &none
&none  &mt LEFT_COMMAND LEFT_GUI  &bt BT_SEL 0  &bt BT_SEL 1  &kp LEFT_COMMAND  &studio_unlock    &none      &none          &kp F11  &kp F12  &bootloader  &none
&none  &kp LSHFT                  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR        &bt BT_CLR_ALL    &none      &none          &none    &none    &kp RSHIFT   &none
                                                &to 0         &kp ENTER         &kp SPACE         &kp SPACE  &kp BACKSPACE  &to 0
            >;
        };

        EXTRA {
            display-name = "extra";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans       &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans       &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &bootloader  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
