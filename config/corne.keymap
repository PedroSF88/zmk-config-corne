#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define NAV 1
#define SYM 2
#define ADJ 3
#define EXTRA 4

/ {
    macros {
        browsertab: browsertab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp LCTRL>;
        };
    };

    combos {
        compatible = "zmk,combos";

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <13 28>;
        };

        perc {
            bindings = <&kp PERCENT>;
            key-positions = <5 17>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <28 16>;
        };

        dollar {
            bindings = <&kp DOLLAR>;
            key-positions = <4 16>;
        };

        pound {
            bindings = <&kp POUND>;
            key-positions = <3 15>;
        };

        at {
            bindings = <&kp AT>;
            key-positions = <2 14>;
        };

        backslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <26 14>;
        };

        star {
            bindings = <&kp STAR>;
            key-positions = <8 20>;
        };

        slash {
            bindings = <&kp SLASH>;
            key-positions = <32 20>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <7 19>;
        };

        minus {
            bindings = <&kp KP_MINUS>;
            key-positions = <18 19 18 19>;
        };

        underscore {
            bindings = <&kp UNDER>;
            key-positions = <30 18>;
        };

        leftbrack {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <31 32>;
        };

        rightbrack {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <33 32>;
        };

        LCtrl {
            bindings = <&sk LCTRL>;
            key-positions = <3 2>;
            layers = <0>;
        };

        CtrlAltDel {
            bindings = <&kp LA(LC(DELETE))>;
            key-positions = <3 2 16>;
        };

        RCtrl {
            bindings = <&sk RCTRL>;
            key-positions = <8 9>;
            layers = <0>;
        };

        RCommand {
            bindings = <&sk RIGHT_GUI>;
            key-positions = <19 22>;
        };

        Exclamation {
            bindings = <&kp EXCLAMATION>;
            key-positions = <13 2>;
        };

        Caret {
            bindings = <&kp CARET>;
            key-positions = <6 18>;
        };

        And {
            bindings = <&kp AMPERSAND>;
            key-positions = <7 19>;
        };

        Lpar {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <9 21>;
        };

        Rpar {
            bindings = <&kp RPAR>;
            key-positions = <10 22>;
        };

        Aposthrophe {
            bindings = <&kp APOSTROPHE>;
            key-positions = <21 22>;
        };
    };

    //

    keymap {
        compatible = "zmk,keymap";

        DEF {
            display-name = "Base";
            bindings = <
&none  &kp Q             &kp W  &kp E                  &kp R      &kp T      &kp Y          &kp U      &kp I      &kp O    &kp P                  &none
&none  &kp A             &kp S  &kp D                  &kp F      &kp G      &kp H          &kp J      &kp K      &kp L    &kp SEMI               &none
&none  &mt LEFT_SHIFT Z  &kp X  &kp C                  &kp V      &kp B      &kp N          &kp M      &kp COMMA  &kp DOT  &mt RIGHT_SHIFT SLASH  &none
                                &mt LEFT_ALT QUESTION  &kp ENTER  &kp TAB    &kp BACKSPACE  &kp SPACE  &to 1
            >;
        };

        NAV {
            display-name = "NavNum";
            bindings = <
&none  &lt 3 LEFT_GUI  &kp K_MUTE         &kp UP_ARROW     &browsertab  &kp PG_UP        &kp SLASH  &kp N7  &kp N8  &kp N9  &kp ASTRK              &none
&none  &kp TAB         &kp LEFT           &kp DOWN_ARROW   &kp RIGHT    &kp PAGE_DOWN    &kp EQUAL  &kp N4  &kp N5  &kp N6  &kp PLUS               &none
&none  &kp LEFT_SHIFT  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp HOME     &kp END          &kp N0     &kp N1  &kp N2  &kp N3  &mt RIGHT_SHIFT MINUS  &none
                                          &to 0            &trans       &trans           &trans     &trans  &to 2
            >;
        };

        SYM {
            display-name = "Symbols";
            bindings = <
&none   &kp F1  &kp F2   &kp F3   &kp F4   &kp LEFT_ALT      &bt BT_SEL 0      &bt BT_SEL 1          &bt BT_SEL 2  &bt BT_SEL 3           &bt BT_SEL 4       &none
&none   &kp F5  &kp F6   &kp F7   &kp F8   &bt BT_CLR        &kp PLUS          &kp MINUS             &kp ASTERISK  &kp SLASH              &kp COMMA          &none
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &bt BT_CLR_ALL    &kp LEFT_BRACKET  &kp LEFT_PARENTHESIS  &kp PIPE      &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET  &none
                         &to 0    &trans   &trans            &trans            &trans                &to 1
            >;
        };

        ADJ {
            display-name = "System";
            bindings = <
&none  &none  &none  &none  &none   &studio_unlock    &kp F1  &kp F2   &kp F3   &kp F4   &kp RIGHT_ALT  &none
&none  &none  &none  &none  &none   &none             &kp F5  &kp F6   &kp F7   &kp F8   &bootloader    &none
&none  &none  &none  &none  &none   &none             &kp F9  &kp F11  &kp F11  &kp F12  &kp RSHIFT     &none
                     &to 0  &trans  &trans            &trans  &trans   &to 0
            >;
        };

        EXTRA {
            display-name = "extra";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans       &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans       &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &bootloader  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
